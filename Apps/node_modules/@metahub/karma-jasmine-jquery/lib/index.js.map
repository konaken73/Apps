{"version":3,"sources":["../src/index.js"],"names":["framework","files","insertIndex","len","length","i","pattern","search","splice","path","resolve","require","included","served","watched","karmaJasmine","$inject","module","exports"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA;;;;;;;AAOA,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AACzB,KAAIC,cAAc,CAAlB;;AAEA,MAAK,IAAIC,MAAMF,MAAMG,MAAhB,EAAwBC,IAAIF,MAAM,CAAvC,EAA0CE,KAAK,CAA/C,EAAkDA,GAAlD,EAAuD;AACtD,MAAIJ,MAAMI,CAAN,EAASC,OAAT,CAAiBC,MAAjB,CAAwB,sCAAxB,MAAoE,CAAC,CAAzE,EAA4E;AAC3EL,iBAAcG,IAAI,CAAlB;AACA;AACA;AACD;;AAEDJ,OAAMO,MAAN,CAAaN,WAAb,EAA0B,CAA1B,EAA6B;AAC5BI,WAASG,eAAKC,OAAL,CAAaC,QAAQD,OAAR,CAAgB,4BAAhB,CAAb,CADmB;AAE5BE,YAAU,IAFkB;AAG5BC,UAAQ,IAHoB;AAI5BC,WAAS;AAJmB,EAA7B;;AAOA,KAAIZ,gBAAgB,CAApB,EAAuB;AACtBa,yBAAa,mBAAb,EAAkC,CAAlC,EAAqCd,KAArC;AACA;AACD;;AAEDD,UAAUgB,OAAV,GAAoB,CAAC,cAAD,CAApB;;AAEAC,OAAOC,OAAP,GAAiB;AAChB,6BAA4B,CAAC,SAAD,EAAYlB,SAAZ;AADZ,CAAjB","file":"index.js","sourcesContent":["import path from 'path';\nimport karmaJasmine from 'karma-jasmine';\n\n/**\n * Karma framework function.\n * Call the `karma-jasmine` module if corresponding files are not already and included and add the jquery + jasmine-jquery bundle to the Karma files (after the `karma-jasmine` files in present, in first position otherwise).\n *\n * @method framework\n * @param {Array<string>} files list of current Karma files.\n */\nfunction framework(files) {\n\tlet insertIndex = 0;\n\n\tfor (let len = files.length, i = len - 1; i >= 0; i--) {\n\t\tif (files[i].pattern.search(/karma-jasmine(\\/|\\\\)lib(\\/|\\\\).*\\.js/) !== -1) {\n\t\t\tinsertIndex = i + 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfiles.splice(insertIndex, 0, {\n\t\tpattern: path.resolve(require.resolve('./jasmine-jquery.bundle.js')),\n\t\tincluded: true,\n\t\tserved: true,\n\t\twatched: false,\n\t});\n\n\tif (insertIndex === 0) {\n\t\tkarmaJasmine['framework:jasmine'][1](files);\n\t}\n}\n\nframework.$inject = ['config.files'];\n\nmodule.exports = {\n\t'framework:jasmine-jquery': ['factory', framework],\n};\n"]}